/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 src/assets/3d/map.glb 
Author: Pablopcb (https://sketchfab.com/pablopcb)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/among-us-map-the-skeld-59a93886f9e74ff6836dff0c269da45f
Title: Among Us - Map "The Skeld"
*/

import React, { createRef, useContext, useEffect, useLayoutEffect, useRef, useState } from 'react'
import {  useGLTF, useScroll } from '@react-three/drei'
import gsap from 'gsap';
import { useFrame, useThree } from '@react-three/fiber';
import { isMobile } from 'react-device-detect';
import { useGSAP } from '@gsap/react';
import { MathUtils } from 'three';
import * as THREE from 'three'

const Model = ({textContent, props }) =>  {
  const { nodes, materials } = useGLTF('../src/assets/3d/optimized.glb')
  const ref = useRef();
  



  const ObjPosition = useRef({ x: -6, y: -0.4, z: 3.6 })
  const ObjRotation = useRef({ x: 0, y: 0, z: 0 })


  useEffect(() => {
    if (!ref.current) return;
  
    let newPosition = { x: -6, y: -0.4, z: 3.6 };
    let newRotation = { x: 0, y: 0, z: 0 };
  
    switch (textContent) {
      case 'Presidents':
        newPosition = { x: -5.7, y: 0.15, z: 4.6 };
        break;
      case 'Secretaries':
        newPosition = { x: 1.5, y: 0, z: 6.9 };
        newRotation.y = Math.PI / 2;
        break;
      case 'Treasurers':
        newPosition = { x: 5.5, y: -0.5, z: -1.6 };
        newRotation.y = Math.PI ;
        break;
      case 'CreativeTeam':
        newPosition = { x: -0.1, y: 0, z: 9 };
        newRotation.y = Math.PI / 3;
        break;
      case 'ManagementTeam':
        newPosition = { x: -6.9 , y: 0, z: 1.5 };
        break;
      case 'TechTeam':
        newPosition = { x: -3, y: -0.5, z: -2 };
        newRotation.y = -Math.PI * 0.5;
        break;
    }
  
    gsap.to(ObjPosition.current, {
      ...newPosition,
      duration: 2,
      ease: 'power1.inOut',
    });
  
    gsap.to(ObjRotation.current, {
      ...newRotation,
      duration: 2,
      ease: 'power1.inOut',
    });
  }, [textContent]);
  
  useFrame(() => {
    if (ref.current) {
      ref.current.position.set(
        ObjPosition.current.x,
        ObjPosition.current.y,
        ObjPosition.current.z
      )
      ref.current.rotation.set(
        ObjRotation.current.x,
        ObjRotation.current.y,
        ObjRotation.current.z
      )
    }
  })
  
  // Using useEffect to update State when browser paints screen unlike useLayoutEffect which changes states when all dom content is loaded

  return (
    <>
    <group {...props} dispose={null} ref={ref} scale={1.2} >
      <mesh geometry={nodes.Object_163.geometry} material={nodes.Object_163.material} />
      <mesh geometry={nodes.mesh_1.geometry} material={nodes.mesh_1.material} />
      <mesh geometry={nodes.Object_133.geometry} material={nodes.Object_133.material} />
      <mesh geometry={nodes.Object_105.geometry} material={nodes.Object_105.material} />
      <mesh geometry={nodes.Object_4.geometry} material={nodes.Object_4.material} />
      <mesh geometry={nodes.Object_183.geometry} material={nodes.Object_183.material} />
      <mesh geometry={nodes.Object_171.geometry} material={nodes.Object_171.material} />
      <mesh geometry={nodes.Object_172.geometry} material={nodes.Object_172.material} />
      <mesh geometry={nodes.Object_174.geometry} material={nodes.Object_174.material} />
      <mesh geometry={nodes.Object_46.geometry} material={nodes.Object_46.material} />
    </group>
  </>
  )
}

export default React.memo(Model);


useGLTF.preload('../src/assets/3d/optimized.glb')
